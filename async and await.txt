async:
------
-> async is a keyword and if it is used before a function, it results in returning a promise.If the code has return <non-promise> in it, then JavaScript automatically wraps it into a resolved promise with that value.
ex:
async function f()
{
return 1;
}

-> for instance the code above returns a resolved promise with the result of 1
async function f()
{
return 1;
}
f().then(alert);//it prints 1

->we can explicitly return a promise
ex:
async function f()
{
return Promise.resolbve(1);
}
f().then(alert); //it prints 1
-> so async ensures that the function returns a promise.

await:
-----

->await is a keyword that makes the javascript to wait until the promises settles and returns the result.
-> this will work only on async functions.
ex:
--
async function f() {
  let promise = new Promise((resolve, reject) => {
    setTimeout(() => resolve("done!"), 1000)
  });
  let result = await promise; //here the execution pauses until the value is returned to the variable result.
  alert(result); // "done!"
}
f();// "done"

